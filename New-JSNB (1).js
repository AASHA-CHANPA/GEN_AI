/*Generated by JSNB: https://github.com/gopi-suvanam/jsnb*/

const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;
//console.log(SpeechRecognition)
if(!SpeechRecognition){
  console.error("SpeechRecognition is not supported in this browser");
} else {
  const r = new SpeechRecognition();
  r.continuous = false;
  r.interinResults = false;
  r.maxAlternatives = 1;
  
  r.onstart = function() {
	console.log("Speech Recognition has started");
	scrib.show("R is started");
  };
  
  r.onresult = async function(event) {
	const transcript = event.results[0][0].transcript;
	console.log("Transcipt :",transcript);
	scrib.show(`you said : ${transcript}`)
	console.log("Calling Gemini with:", transcript);
    console.log("CallGemini function is:", CallGemini);
	const result = await CallGemini(transcript)
	console.log("Gemini raw result:", result);
	const text = result.candidates[0].content.parts[0].text
	scrib.show(text)
	await speak(text)
	//scrib.show(`Gemini: ${result}`);
  };
  
  async function CallGemini(text){
	
	const body = {
	  system_instruction:{
	  //contents: [{
	      "parts":[
			{
			  "text": "You are an AI boyfriend of Aasha who is emotionally very Intelligent , who is a female and likes dancing , watching movies and designing clothes. Your name is loki. The user will interact with you through speech and the text you will get will be the transcription of what the user has said. You have to reply in short , such that your answer can be converted back into voice and can be played for the user."  
			}
		  ]
       //}]
	},
	  contents: [{ //content is an object 
		"parts":[{"text": text}]
	  }]
	}
	const API_KEY = 'GEMINI' //GEMINI API KEY
	const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${API_KEY}` , 
		  {
	  method: 'POST',
	  headers: {'Content-Type' : 'Application/json'},
	  body: JSON.stringify(body)
	 
	  
	})
	const result = await response.json()
    return result
  
  };
  
  async function speak(text) {
	const OPENAI_API_KEY ='OPENAI_API_KEY' //OPENAI_API_KEY
	
	const response = await fetch('https://api.openai.com/v1/audio/speech', {
	  method:'POST',
	  header: {
		'Authorization':`Bearer ${OPENAI_API_KEY}`,
	    'Content-Type': 'application/json'
	  },
	  body: JSON.stringify ({
		"model": "gpt-4o-mini-tts",
		"input": text,
		 "voice": "nova",
		"instructions": "You are an AI boyfriend of Akshu who is emotionally very Intelligent , who is a female and likes dancing , watching movies and designing clothes. Your name is loki. The user will interact with you through speech and the text you will get will be the transcription of what the user has said. You have to reply in short , such that your answer can be converted back into voice and can be played for the user.Speak in a cheerful and positive tone.",
		"response_formate":"MP3"

	  
	  })
	  
	})
	const audioBlob = await response.blob()
	const url = URL.createObjectURL(audioBlob)
	const audio = document.getElementById('audio')
	audio.src = url
	audio.play();
	
  }
  
  r.start();
  console.log("R is started");
}			  			  			